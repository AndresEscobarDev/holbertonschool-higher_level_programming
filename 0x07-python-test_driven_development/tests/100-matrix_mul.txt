The ``matrix_mul`` module
==========================

Using ``matrix_mul``
---------------------

Import function:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now use it:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4], [5, 6]])
    [[22, 28], [40, 52]]

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> matrix_mul([])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    >>> matrix_mul("HOLI", [[9]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul([[9]], "HOLI")
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul(["HOLI"], [[9]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[9]], ["HOLI"])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([], [[]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[8]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([[8]], [])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([], [[]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[True, 2]], [[3, 4], [5, 9]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[1, 2]], [[3, 4], [5, "s"]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> print(matrix_mul([[1, 2, 3, 4], [3, 4, 5]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> print(matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4, 0], [5, 6]]))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

    >>> print(matrix_mul([[1, 2, 3, 4, 8], [3, 4, 5, 3, 9]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

    >>> print(matrix_mul([[1, 2, 3, 4], [3, 4, 5, 3]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
