The ``lazy_lazy_matrix_mul`` module
==========================

Using ``lazy_matrix_mul``
---------------------

Import function:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4], [5, 6]])
    array([[22, 28],
           [40, 52]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> lazy_matrix_mul([])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> lazy_matrix_mul("HOLI", [[9]])
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[9]], "HOLI")
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul(["HOLI"], [[9]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[9]], ["HOLI"])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([], [[]])
    Traceback (most recent call last):
    ValueError: shapes (0,) and (1,0) not aligned: 0 (dim 0) != 1 (dim 0)

    >>> lazy_matrix_mul([[8]], [[]])
    array([], shape=(1, 0), dtype=int64)

    >>> lazy_matrix_mul([[8]], [])
    Traceback (most recent call last):
    ValueError: shapes (1,1) and (0,) not aligned: 1 (dim 1) != 0 (dim 0)

    >>> lazy_matrix_mul([], [[]])
    Traceback (most recent call last):
    ValueError: shapes (0,) and (1,0) not aligned: 0 (dim 0) != 1 (dim 0)

    >>> lazy_matrix_mul([[True, 2]], [[3, 4], [5, 9]])
    array([[13, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, "s"]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

    >>> print(lazy_matrix_mul([[1, 2, 3, 4], [3, 4, 5]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

    >>> print(lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4, 0], [5, 6]]))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

    >>> print(lazy_matrix_mul([[1, 2, 3, 4, 8], [3, 4, 5, 3, 9]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: shapes (2,5) and (3,2) not aligned: 5 (dim 1) != 3 (dim 0)

    >>> print(lazy_matrix_mul([[1, 2, 3, 4], [3, 4, 5, 3]], [[1, 2], [3, 4], [5, 6]]))
    Traceback (most recent call last):
    ValueError: shapes (2,4) and (3,2) not aligned: 4 (dim 1) != 3 (dim 0)
